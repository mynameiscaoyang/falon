<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			            http://www.springframework.org/schema/context
			            http://www.springframework.org/schema/context/spring-context-4.2.xsd
			            http://www.springframework.org/schema/mvc
			            http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
			            http://www.springframework.org/schema/tx
			            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
			            http://mybatis.org/schema/mybatis-spring 
			            http://mybatis.org/schema/mybatis-spring.xsd ">
			            
	<!-- mybatis:scan 会将falon.dao包下的所有接口当做mapper配置，之后可以自动引入mapper类 -->	
	<!-- <mybatis:scan base-package="faon.dao"/>	 -->   
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
          <property name="basePackage" value="falon.dao" />
          <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
 	</bean>         
                        
     <!--  将 falon.dao 包下 有spring注解的注册成spring的bean -->
    <context:component-scan base-package="falon"></context:component-scan>                

	<!-- 使用 PropertyOverrideConfigurer 后处理器加载数据源参数 -->
    <context:property-override location="classpath:db.properties"/>
    
    <!-- 配置c3p0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"/>
    
    <!-- 配置 sqlSessionfacoty : org.mybatis.spring.SqlSessionfactoryBean 是 mybatis社区开发用于整合spring的Bean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" 
    	p:dataSource-ref="dataSource"
    	p:configLocation="classpath:mybatis-config.xml"
    	/>
    
    <!-- jdbc事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    	 p:dataSource-ref="dataSource" />
   	 <!-- 启用支持annotation注解方式事务管理 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>	 
    
</beans>